name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Debug - List workspace structure
      run: ls -R

    - name: Build all projects (no features enabled)
      run: cargo build --verbose --release --workspace

    - name: Build all projects (all features enabled)
      run: cargo build --verbose --all-features --release --workspace

    - name: Check semver compatibility (russh)
      uses: obi1kenobi/cargo-semver-checks-action@v2
      with:
        package: russh

    - name: Debug - Print current directory
      run: pwd

    - name: Debug - List current directory
      run: ls -la

    - name: Debug - List entire target directory
      run: ls -R target

    - name: Debug - List release directory
      run: ls -la target/release

    - name: Debug - Find russh related files
      run: find . -name "russh*"

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: russh-Linux
        path: |
          target/release/russh*
          target/release/librussh*
          target/release/*.rlib
          target/release/*.so
          target/release/*.a
        if-no-files-found: warn

  Formatting:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rustfmt
      run: rustup component add rustfmt

    - name: rustfmt
      run: cargo fmt --all -- --check

  Clippy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Clippy
      run: rustup component add clippy

    - name: Clippy (no features enabled)
      run: cargo clippy --workspace -- -D warnings

    - name: Clippy (all features enabled)
      run: cargo clippy --workspace --all-features -- -D warnings

  Test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Run tests
      run: cargo test --workspace --verbose
